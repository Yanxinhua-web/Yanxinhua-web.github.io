(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{373:function(s,n,a){"use strict";a.r(n);var t=a(0),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[s._v("#")]),s._v(" 定时器")]),s._v(" "),a("h2",{attrs:{id:"setintervalsetinterval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setintervalsetinterval"}},[s._v("#")]),s._v(" setintervalsetinterval")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 使count中的内容，自动切换\nvar count = document.getElementById('box')\n// - 定时调用\n// - 可以有一个函数，每隔一段时间执行一次\n// - 参数：\n//    1. 回调函数，次函数每隔一段时间执行一次\n//    2. 每次调用的时间。\n// \nvar cun = 1\nvar timer = setInterval(() => {\ncount.innerHTML = ++cun; \nif (cun == 100) {\n    clearInterval(timer)\n}\n}, 10); \n// clearInterval\n// 关闭定时器\n// 方法中需要一个定时器的标识作为参数，关闭标识对象的定时器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h2",{attrs:{id:"延时调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延时调用"}},[s._v("#")]),s._v(" 延时调用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 延时调用一个函数不立刻执行，二是一段时间以后再执行，而且只会执行一次\n// 延时调用和定时调用的区别，定时调用会执行多次，而延时调用只会执行一次\n// 延时调用和定时调用实际上是可以互相代替的，在开发中可以根据自己的需求去选择\n\nvar time = setTimeout(() => {\nconsole.log('aaa')\n}, 1000)\nclearTimeout(time)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);