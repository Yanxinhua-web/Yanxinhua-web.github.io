(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{395:function(s,e,n){"use strict";n.r(e);var a=n(0),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" promise")]),s._v(" "),n("p",[s._v("Promise是es6提供的一种异步的解决方案，比回调函数更加清晰明了")]),s._v(" "),n("p",[s._v("Promise翻译过来就是承诺的意思，这个承诺会在未来有一个确认的答复，并且该承诺有三种状态，分别是：")]),s._v(" "),n("ol",[n("li",[s._v("等待中 pending")]),s._v(" "),n("li",[s._v("完成了 resolved")]),s._v(" "),n("li",[s._v("拒绝了 rejected\n这个承诺一旦从等待状态变成为其他状态就永远不能更改状态了，也就是说一旦状态改变成resolved后，就不能再次改变")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("new promise((resolved,reject)=>{\n    resolve('success')\n    reject('reject')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("当我们在构造promise的时候，构造函数内部的代码是立即执行的\nnew Promise((resolve,reject)=>{\nconsole.log('new promise')\nresolve('success')\n})\nconsole.log('finifs')")]),s._v(" "),n("p",[s._v("promise实现了链式调用，也就是说每次调用t\nhen之后返回的都是一个promise，并且是一个全新的promise。原因也是因为状态不可变，如果你在then中使用了return 那么return的值会被promise.resolve()包装")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Promise.resolve(1).then(res=>{\n    console.log(res)\n    return 2\n}).\nthen(res=>{\n    cosnole.log(res) //2\n\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("当然了，promise也很好的解决了回调地狱的问题，例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("ajax(url,()=>{\n    ajax(url1,()=>{\n        ajax(url2,()=>{\n            //处理逻辑\n        })\n    })\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("可以改写成：")]),s._v(" "),n("div",{staticClass:"language-ajax(url1).then(res=>{ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    console.log(res)\n    return ajax(url1)\n}).then(res=>{\n    console.log(res)\n    return ajax(url2)\n}).then(res=>{\n    cosnole.log(res)\n})``` \n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);