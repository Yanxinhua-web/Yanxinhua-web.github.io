(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{380:function(s,a,r){"use strict";r.r(a);var n=r(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"数组（array）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组（array）"}},[s._v("#")]),s._v(" 数组（Array）")]),s._v(" "),r("ul",[r("li",[r("p",[s._v("数组也是一个对象")])]),s._v(" "),r("li",[r("p",[s._v("它和普通的对象类似，也是用来存储一些值的")])]),s._v(" "),r("li",[r("p",[s._v("不同的是普通对象是使用字符串作为属性的")])]),s._v(" "),r("li",[r("p",[s._v("数组则使用数字来作为索引操作元素")])]),s._v(" "),r("li",[r("p",[s._v("索引：")]),s._v(" "),r("p",[s._v("从0开始的整数就是索引")])]),s._v(" "),r("li",[r("p",[s._v("数组的存储性能比普通对象要好，在开发中我们经常使用数组来存储一些数据")])])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("function log(str) {\nconsole.log(str)\n}\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br")])]),r("h2",{attrs:{id:"创建数组对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建数组对象"}},[s._v("#")]),s._v(" 创建数组对象")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr = new Array(); \nconsole.log(arr)\n 添加元素\narr[0] = 10\narr[1] = 20\nlog(arr)\n 读取元素\nlog(arr[0])\nlog(arr[3]) undefined\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br")])]),r("h2",{attrs:{id:"获取数组的长度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获取数组的长度"}},[s._v("#")]),s._v(" 获取数组的长度")]),s._v(" "),r("ul",[r("li",[s._v("可以使用length来获取数组的长度")]),s._v(" "),r("li",[s._v("语法：数组.length")])]),s._v(" "),r("ul",[r("li",[s._v("对于连续的数组可以使用length获取数组的长度")]),s._v(" "),r("li",[s._v("对于非连续的数组，使用length会获取到最大的索引")])]),s._v(" "),r("ul",[r("li",[s._v("尽量不要创建非连续的数组")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("arr[10] = 31\nlog(arr)\nlog(arr.length)\n\n//  修改length\n //  如果修改的length大于原长度，则多出的部分会空出来\n //  如果修改的length小于原长度，则多出来的元素会被删除\n //  为数组最后一位加值\narr[arr.length] = 50s\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br")])]),r("h2",{attrs:{id:"数组字面量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组字面量"}},[s._v("#")]),s._v(" 数组字面量")]),s._v(" "),r("ul",[r("li",[s._v("使用字面量来创建数组")])]),s._v(" "),r("p",[s._v("var arr1 = []")]),s._v(" "),r("p",[s._v("使用字面量创建数组，可以在创建数组时候就执行数组中的元素\narr1 = [1, 2, 3, 4]\nlog(arr1)")]),s._v(" "),r("p",[s._v("构造函数指定值\nvar arr2 = new Array(1, 2, 3, 4, 5)\nlog(arr2)\n指定长度\nvar arr3 = new Array(4)\nlog(arr3)")]),s._v(" "),r("h2",{attrs:{id:"数组的四个方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的四个方法"}},[s._v("#")]),s._v(" 数组的四个方法")]),s._v(" "),r("ul",[r("li",[s._v("push")]),s._v(" "),r("li",[s._v("该方法可以向数组中添加一个或多个元素，并返回数组新的长度")]),s._v(" "),r("li",[s._v("将要添加的元素作为方法的参数传递")]),s._v(" "),r("li",[s._v("这样这个元素将会自动添加到数组的末尾")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr4 = [1, 2, 3]\narr4.push(4)\nlog(arr4) 1234\narr4.push(5, 6, 7)\nlog(arr4)  1234567\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br")])]),r("ul",[r("li",[s._v("pop")]),s._v(" "),r("li",[s._v("该方法会删除数组的最后一个元素")]),s._v(" "),r("li",[s._v("并将删除的元素作为返回值返回")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("arr4.pop()\nlog(arr4) 123456\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("ul",[r("li",[s._v("unshift")]),s._v(" "),r("li",[s._v("向数组的开头添加一个元素，并返回新的数组")]),s._v(" "),r("li",[s._v("向前面添加元素以后，其他元素的索引会依次调整")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("arr4.unshift(-1, 0)\nlog(arr4) -10123456\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("ul",[r("li",[s._v("shift")]),s._v(" "),r("li",[s._v("删除数组的第一个元素，并将元素作为返回值")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("arr4.shift()\nlog(arr4) 123456\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("h2",{attrs:{id:"数组的遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的遍历"}},[s._v("#")]),s._v(" 数组的遍历")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("for (var i = 0; i < arr4.length; i++) {\nlog(i)\n}\n\n// forEach (ie8)以上支持\n//  一般我们都是使用for循环遍历数组\n // js为我们提供了一个方法\n//  数组中有几个元素 函数就会执行几次， 每次执行时候浏览器会将参数作为实参传递\n//  我们可以定义形参来读取这些内容\n//  浏览器会在回调函数中传递三个参数 元素->索引->数组本身\n\narr4.forEach(function (a, b, c) {\nlog(a) 元素\nlog(b) 下标\nlog(c) 数组本身\n})\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br")])]),r("h2",{attrs:{id:"slice和splice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slice和splice"}},[s._v("#")]),s._v(" slice和splice")]),s._v(" "),r("p",[s._v("var arr5 = [1, 2, 3, 4, 5]")]),s._v(" "),r("h3",{attrs:{id:"slice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[s._v("#")]),s._v(" slice")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v(" 不会改变原数组，返回一个新数组\n 可以在数组中提取指定元素\n 语法：arr.slice(start, end)\n 不会包含结束索引\n\narr5.slice(1, 2) 2 \n\n 第二个参数可以省略不写\n\narr5.slice(1) 2345\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br")])]),r("h3",{attrs:{id:"splice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[s._v("#")]),s._v(" splice")]),s._v(" "),r("p",[s._v("删除元素并向数组添加新的元素\n使用splice会意向原数组，并将指定元素删除")]),s._v(" "),r("ul",[r("li",[s._v("第一个参数是从哪里删除")]),s._v(" "),r("li",[s._v("第二个参数是删除的个数")]),s._v(" "),r("li",[s._v("第三个参数及以后，替换指定位置的元素")])]),s._v(" "),r("ul",[r("li",[s._v("语法：splice(起始位置，删除个数)")])]),s._v(" "),r("ul",[r("li",[s._v("arr5.splice(0, 2) 12")])]),s._v(" "),r("h2",{attrs:{id:"数组去重"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[s._v("#")]),s._v(" 数组去重")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr6 = [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 4]\nfor (let i = 0; i < arr6.length; i++) {\nfor (let j = i + 1; j < arr6.length; j++) {\nif (arr6[i] == arr6[j]) {\n\n    arr6.splice(j, 1) 自动补位会有漏网之鱼\n    j--;\n\n}\n\n}\n}\nlog(arr6)\n\n 进阶写法\nvar res = Array.from(new Set(arr6))\nlog(res)\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br"),r("span",{staticClass:"line-number"},[s._v("17")]),r("br")])]),r("h2",{attrs:{id:"数组的剩余方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的剩余方法"}},[s._v("#")]),s._v(" 数组的剩余方法")]),s._v(" "),r("h3",{attrs:{id:"concat拼接两个数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concat拼接两个数组"}},[s._v("#")]),s._v(" concat拼接两个数组")]),s._v(" "),r("p",[s._v("不会改变原数组")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr8 = [1]\nvar arr9 = [2]\nvar arr10 = arr8.concat(arr9)\nlog(arr10) 1, 2\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br")])]),r("h3",{attrs:{id:"join"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[s._v("#")]),s._v(" join")]),s._v(" "),r("ul",[r("li",[s._v("把数组转换为str")]),s._v(" "),r("li",[s._v("不会改变原数组")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr11 = [1, 2, 3]\nvar str1 = arr11.join()\nvar str2 = arr11.join('-')\nlog(str1) '1, 2, 3'\nlog(str2) '1-2-3'\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br")])]),r("h3",{attrs:{id:"reverse"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[s._v("#")]),s._v(" reverse")]),s._v(" "),r("ul",[r("li",[s._v("将数组翻转")]),s._v(" "),r("li",[s._v("不会改变原数组")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr7 = [9, 8, 7, 6, 5, 4, 3, 2, 1]\nvar newarr = arr7.reverse()\nlog(newarr) 123456789\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br")])]),r("h3",{attrs:{id:"sort"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" sort")]),s._v(" "),r("ul",[r("li",[s._v("数组排序")]),s._v(" "),r("li",[s._v("根据unicode编码顺序")]),s._v(" "),r("li",[s._v("我们可以添加一个回调函数，来指定排序规则")]),s._v(" "),r("li",[s._v("浏览器会根据回到函数的返回值来决定元素的位置")]),s._v(" "),r("li",[s._v("如果返回一个大于0的值，对元素会交换位置")]),s._v(" "),r("li",[s._v("如果返回一个小于0的值，则元素位置不变")]),s._v(" "),r("li",[s._v("如果返回一个0，则认为两个值相等，元素位置也不变")]),s._v(" "),r("li",[s._v("如果需要升序排列 返回a-b")]),s._v(" "),r("li",[s._v("如果需要降序排列，返回b-a")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("var arr11 = arr7.sort()\nlog(arr11) 123456789\n\nvar arr12 = arr7.sort(function (a, b) {\n if (a > b) {\n\n     return 1\n\n } else if (a < b) {\n\n     return -1\n\n } else {\n\n     return 0\n\n }\n return a - b 升序\nreturn b - a 降序\n})\nlog(arr12)\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br"),r("span",{staticClass:"line-number"},[s._v("17")]),r("br"),r("span",{staticClass:"line-number"},[s._v("18")]),r("br"),r("span",{staticClass:"line-number"},[s._v("19")]),r("br"),r("span",{staticClass:"line-number"},[s._v("20")]),r("br"),r("span",{staticClass:"line-number"},[s._v("21")]),r("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);