(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{382:function(s,a,n){"use strict";n.r(a);var e=n(0),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),n("p",[s._v("运算符, 也叫操作符, 通过运算符可以对一个或者多个值进行运算(+ - * /)")]),s._v(" "),n("h2",{attrs:{id:"typeof-instanceof-就是一个运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typeof-instanceof-就是一个运算符"}},[s._v("#")]),s._v(" typeof instanceof 就是一个运算符")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" typeof返回一个字符串类型的值\n        var a = 123;\n        var result = typeof a;\n        console.log(typeof result); //string\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"算数运算符-不会对原变量进行影响"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符-不会对原变量进行影响"}},[s._v("#")]),s._v(" 算数运算符 不会对原变量进行影响")]),s._v(" "),n("ul",[n("li",[s._v("当对非number类型的值进行转换时候 会将两个数转为number再运算")]),s._v(" "),n("li",[s._v("特例：两个字符串相加 就是拼接字符串")]),s._v(" "),n("li",[s._v("任何值跟字符串相加 都会先转换为字符串 然后再拼接")])]),s._v(" "),n("h4",{attrs:{id:"可以对两个数进行加法运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可以对两个数进行加法运算"}},[s._v("#")]),s._v(" +可以对两个数进行加法运算")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        a + 1;\n        console.log(a);\n        a = a + 1;\n        console.log(a);\n        a = true + false; //1\n        console.log(a)\n        a = true + null; //1\n        console.log(a)\n        a = true + undefined; //1\n        console.log(a)\n        a = true + NaN; //NaN\n        console.log(a)\n        a = '123' + '456'; //123456\n        console.log(typeof a) //string \n        a = true + 'aaa'; //trueaaa\n        console.log(a)\n\n 隐式类型转换\n\n        var c = 123;\n        c = c + '';\n\n -\n\n        a = a - 1;\n        console.log(a);\n\n *\n\n        a = a * 1;\n        console.log(a);\n\n /\n\n        a = a / 1;\n        console.log(a);\n\n %\n\n        a = a % 1;\n        console.log(a);\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("h3",{attrs:{id:"一元运算符-先转换为number再运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符-先转换为number再运算"}},[s._v("#")]),s._v(" 一元运算符 先转换为number再运算")]),s._v(" "),n("p",[s._v("可以将+其他类型，进行隐式类型转换")]),s._v(" "),n("ul",[n("li",[s._v("+正号")]),s._v(" "),n("li",[s._v("-负号")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        var a = 123;\n        a = +a;\n        console.log(a);\n        a = -a;\n        console.log(a);\n        a = true;\n        console.log(-a);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"自增和自减"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自增和自减"}},[s._v("#")]),s._v(" 自增和自减")]),s._v(" "),n("h4",{attrs:{id:"自增-使变量在自身的基础上增加1-前-跟后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自增-使变量在自身的基础上增加1-前-跟后"}},[s._v("#")]),s._v(" ++ 自增 使变量在自身的基础上增加1 前++跟后++")]),s._v(" "),n("p",[s._v("无论是a++和++a都会立即使原变量的值自增1\n区别：")]),s._v(" "),n("h4",{attrs:{id:"自减-使变量在自身的基础上减少1-前-跟后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自减-使变量在自身的基础上减少1-前-跟后"}},[s._v("#")]),s._v(" -- 自减 使变量在自身的基础上减少1  前--跟后--")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        var a = 1;\n        a++;\n        a++;\n        a++;\n        console.log(a); //3\n        a++是先取值再加1 ++a是先加1再取值 --同理\n        console.log(a++);\n        console.log(++a);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"逻辑运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),n("p",[s._v("js中提供了三种逻辑运算")]),s._v(" "),n("h3",{attrs:{id:"！-非-对一个数字进行取反，则会将其转换为布尔值，再取反"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#！-非-对一个数字进行取反，则会将其转换为布尔值，再取反"}},[s._v("#")]),s._v(" ！ 非  对一个数字进行取反，则会将其转换为布尔值，再取反")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" 可以对任意一个值取两次反，会将其转化为boolean值\n\n        var a = false;\n        a = !a;\n        console.log(a)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"与"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与"}},[s._v("#")]),s._v(" && 与")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" 如果两个值都是true 就会返回true\n\n 如果两个值又一个是false，就会返回false\n\n 短路& 如果第一个值是false不会执行之后的\n\n        var a = true && true;\n        console.log(a); //true\n        var a = true && false;\n        console.log(a); //false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"或"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#或"}},[s._v("#")]),s._v(" || 或")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n 两个值只要有一个true就会返回true\n\n 两个值只有都是true才会返回true\n\n 非boolean的与或运算\n\n 对于非boolean值 会将其先转换为boolean再运算\n\n        var result = 1 && 2; //2 会转换 但是不会改变原值 返回最后面那个\n        console.log(result);\n        result = 2 && 0; //返回0 又一个值是false 返回false\n        result = NaN && 0; //返回nan 都是false 返回前面那个 短路\n\n 第一个是true则直接返回第一个值\n\n        result = 1 || 2;\n\n 第一个值是false返回第二个值\n\n        result = 0 || 2;\n        result = 0 || null;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"赋值运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),n("h3",{attrs:{id:"可以将符号右侧的值赋值给符号左侧的变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可以将符号右侧的值赋值给符号左侧的变量"}},[s._v("#")]),s._v(" =可以将符号右侧的值赋值给符号左侧的变量")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n a+=5等价于a=a+5 a-=5等价于a=a+5 a*=5等价于a=a*5 a/=5一样 a%=5一样\n\n        var a = 10;\n        console.log(a)\n        a = a + 5; //把a+5后赋值给a\n        a += 5; //跟上面代码一样\n        a -= 5;\n        a /= 5;\n        a %= 5;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"关系运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[s._v("#")]),s._v(" 关系运算符")]),s._v(" "),n("p",[s._v("通过关系运算符可以比较两个值之间的大小关系")]),s._v(" "),n("p",[s._v("如果关系成立它会返回true, 如果关系不成立则返回false")]),s._v(" "),n("h3",{attrs:{id:"号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#号"}},[s._v("#")]),s._v(" >号")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" 判断符号左侧的值是否大于右侧的\n\n 如果关系成立，返回true, 如果关系不成立则返回false\n\n        console.log(5 > 10)\n        var result = 5 > 10;\n        console.log(result) //false\n        result = 5 < 10;\n        console.log(result) //true\n        result = 5 >= 10;\n        console.log(result) //false\n        result = 5 <= 10;\n        console.log(result) //true\n\n 非数值的情况\n\n 对于非数值\n\n        coonsole.log(1 > true) //false\n        console.log(1 >= true) //true  把true当成1\n        console.log(1 > '0') //true\n\n 任何值和NAN比较返回都是false\n\n        console.log(10 > 'hello') //false\n        console.log(1 > null) //true\n        console.log(1 > undefined) //true\n        console.log(true > false) //true  1>0\n\n 如果两边都是字符串 不会将其转换为数字进行比较\n\n 而会比较unicode编码 自行百度unicode编码表\n\n 比较字符编码时候 时候会一位一位比较\n\n 如果两位一样 则会比较下一位，所以借用它来对我们英文进行排序\n\n        console.log('1' < '5') //true\n        console.log('11' < '5') //true\n\n 注意在比较两个字符串型的数字时候，一定一定要注意转型\n\n        console.log('122345646' < +'5')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("h3",{attrs:{id:"相等运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符"}},[s._v("#")]),s._v(" 相等运算符")]),s._v(" "),n("p",[s._v("相等运算符 用来比较两个值是否相等")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" 如果相等会返回true 否则返回false\n\n 使用==来做相等运算 \n\n 如果只得类型不同，则会自动进行类型转换，将其转换为相同的类型 然后会比较\n\n == \n\n        console.log(1 == 1) //true\n        console.log('1' == 1) // true\n\n NAN不和任何值相等，包括它自己本身\n\n 可以使用isNAN()函数来判断一个值是否是NAN\n\n        var isnan = NAN;\n        console.log(isnan == NAN) //false\n        console.log(isNaN(isnan)); //true\n\n != 不相等判断两个值是否不相等 不相等返回true\n\n 与==相反\n\n ===全等 不会做自动类型转换\n\n ！==不全等\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h2",{attrs:{id:"条件运算符-也叫三元运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符-也叫三元运算符"}},[s._v("#")]),s._v(" 条件运算符 也叫三元运算符")]),s._v(" "),n("ul",[n("li",[s._v("语法： 条件表达式? 语句1：语句2;")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n 条件运算符，首先对条件表单时进行求值。\n\n 如果该值为true, 则执行语句1，并返回执行结果\n\n 如果该值为false，则执行语句2，并返回执行结果\n\n        console.log(1 > 0 ? console.log('aaa') : console.log('bbb'));\n\n 嵌套写法\n\n        console.log(1 > 0 ? (1 < 0 ? alert('aaa') : alert('bbb')) : (1 > 0 ? console.log('ccc') : console.log('ddd')));\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"运算符的优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[s._v("#")]),s._v(" 运算符的优先级")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" ，号运算符 分割语句\n\n 可以在声明多个变量时候使用\n\n 先乘除 后加减\n\n        var result = 1 + 2 * 3;\n\n &&的优先级高 \n\n 在js中有一个优先级的表\n\n 在表中 优先级越高越靠上 表不需要记忆 遇到优先级问题 直接看表学习就行了\n\n        var result = 1 || 2 && 3;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);