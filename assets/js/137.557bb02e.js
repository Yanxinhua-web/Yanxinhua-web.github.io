(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{466:function(s,e,n){"use strict";n.r(e);var a=n(0),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"一个简单的webpack配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一个简单的webpack配置"}},[s._v("#")]),s._v(" 一个简单的webpack配置")]),s._v(" "),n("p",[s._v("我们把之前涉及到的几部分配置内容合并在一起，就可以创建一个简单的webpack配置了，webpack运行时默认吧读取项目下的webapck.config.js文件作为配置\n所以我们在项目中构建一个webpack.config.js")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const path = require('path')\nconst UglifyPlugin = require('uglifyjs-webpack-plugin')\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'list'),\n        filename: 'bundle.js',\n    },\n    module: {\n        rules: [{\n            test: /\\.jsx?/,\n            include: [\n                path.resolve(__dirname, 'src')\n            ],\n            use: 'babel-loader',\n        }]\n    },\n    //代码模块路径解析的配置\n    resolve: {\n        modules: [\n            \"node_modules\",\n            path.resolve(__dirname, 'src')\n        ],\n        extensions: [\".wasm\", \".mjs\", \".js\", \".json\", \".jsx\"],\n    },\n\n    plugins: [\n        new UglifyPlugin(),\n        //使用uglifyjs-webpack-plugin来压缩js代码\n        //如果你留意了 我们一开始直接使用webpack构建的结果，你会发现已经默认使用了js代码压缩的插件\n        //这其实也是我们命令中的 --mode production的效果，后续会提到mode参数\n    ]\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("注意：如果报错压缩模块找到")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//安装一下就好了\nnpm i uglifyjs-webpack-plugin --save-dev\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("注意：如果遇到bable不存在情况下")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm i babel-loader --save\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("注意：babel/core没找到")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm i --save -dev @babel/core\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("注意babel")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install babel-loader babel-core babel-preset-es2015 --save-dev\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("webpack配置的其实是一个node.js脚本，这个脚本对外暴露一个配置对象，webpack通过这个对象来读相关的一些配置，因为是node.js脚本，所以可玩性非常高，你可以使用任何的node.js模块，如上述用到的path模块，当然第三方的模块也可以，\n创建了webpack。config.js后再执行webpack命令，webpack就会使用这个配置文件的配置了\n有的时候我们开始一个新的前端项目，并不需要从零开始配置 webpack，而可以使用一些工具来帮助\n快速生成 webpack 配置。")])])}),[],!1,null,null,null);e.default=t.exports}}]);